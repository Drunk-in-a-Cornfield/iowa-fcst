version: '3'
services:
  ui:
    build: ./ui
    container_name: ui
    restart: always
    depends_on:
      - database
    ports:
      - 3000:3000
    environment:
      WAIT_HOSTS: mlservice:4000
      WAIT_HOSTS_TIMEOUT: 900
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    command: sh -c "/wait && npm start"
    volumes:
      - ./ui:/usr/src/app

  mlservice:
    build: ./mlservice
    container_name: mlservice
    restart: always
    depends_on:
      - database
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
      WAIT_HOSTS: postgres:5432
      WAIT_HOSTS_TIMEOUT: 900
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    ports:
      - 4000:4000
    command: sh -c "/wait && python3 /app/app.py"
    volumes:
      - ./mlservice:/app
  
  database:
    build: ./database
    container_name: 'postgres'
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'root'
      POSTGRES_DB: 'liquor_sales'
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ./database:/share/

  pgadmin:
    build: ./pgadmin
    container_name: 'pgadmin'
    restart: always
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: 'root@gatech.edu'
      PGADMIN_DEFAULT_PASSWORD: 'root'
    ports:
      - '5050:80'

  eda:
    build: ./eda
    container_name: 'eda'

volumes:
  database-data: # named volumes can be managed easier using docker-compose
